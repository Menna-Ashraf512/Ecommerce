import{i as b}from"./chunk-CDTZA3VN.js";import{a as o}from"./chunk-3KDYLMZQ.js";import{Lc as d,T as c,Y as p,Z as u,i}from"./chunk-VHZDE6SP.js";var s=class extends Error{};s.prototype.name="InvalidTokenError";function m(r){return decodeURIComponent(atob(r).replace(/(.)/g,(e,t)=>{let a=t.charCodeAt(0).toString(16).toUpperCase();return a.length<2&&(a="0"+a),"%"+a}))}function v(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return m(e)}catch{return atob(e)}}function h(r,e){if(typeof r!="string")throw new s("Invalid token specified: must be a string");e||(e={});let t=e.header===!0?0:1,a=r.split(".")[t];if(typeof a!="string")throw new s(`Invalid token specified: missing part #${t+1}`);let l;try{l=v(a)}catch(n){throw new s(`Invalid token specified: invalid base64 for part #${t+1} (${n.message})`)}try{return JSON.parse(l)}catch(n){throw new s(`Invalid token specified: invalid json for part #${t+1} (${n.message})`)}}var f=class r{constructor(e){this._httpClient=e}userData=new i(null);userProfile=new i({});_router=u(b);sendRegisterForm(e){return this._httpClient.post(`${o.baseUrl}/api/v1/auth/signup`,e)}sendLoginForm(e){return this._httpClient.post(`${o.baseUrl}/api/v1/auth/signin`,e)}saveUserData(){let e=localStorage.getItem("userToken");if(e){let t=h(e);this.userData.next(t),console.log("Decoded User Data:",t)}else console.log("No Token Found in localStorage")}getUser(e){return this._httpClient.get(`${o.baseUrl}/api/v1/users/${e}`)}updateUser(e){return this._httpClient.put(`${o.baseUrl}/api/v1/users/updateMe/`,e)}logOut(){localStorage.removeItem("userToken"),localStorage.removeItem("imageKey"),this._router.navigate(["/login"])}setEmailVerify(e){return this._httpClient.post(`${o.baseUrl}/api/v1/auth/forgotPasswords`,e)}setCodeVerify(e){return this._httpClient.post(`${o.baseUrl}/api/v1/auth/verifyResetCode`,e)}setResetPass(e){return this._httpClient.put(`${o.baseUrl}/api/v1/auth/resetPassword`,e)}static \u0275fac=function(t){return new(t||r)(p(d))};static \u0275prov=c({token:r,factory:r.\u0275fac,providedIn:"root"})};export{h as a,f as b};
